// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingCostPlanner.Infrastructure.Context;

#nullable disable

namespace ShoppingCostPlanner.Infrastructure.Migrations
{
    [DbContext(typeof(ShoppingCostPlannerDbContext))]
    [Migration("20230408100146_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Grocery",
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothing",
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Whole Milk",
                            IsCompleted = false,
                            Name = "Milk",
                            Price = 2.99m,
                            Quantity = 1,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Wheat Bread",
                            IsCompleted = false,
                            Name = "Bread",
                            Price = 1.99m,
                            Quantity = 2,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Organic Large Eggs",
                            IsCompleted = false,
                            Name = "Eggs",
                            Price = 1.99m,
                            Quantity = 1,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.ItemShoppingList", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ItemShoppingList");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ShoppingListId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            ShoppingListId = 1
                        },
                        new
                        {
                            ItemId = 3,
                            ShoppingListId = 2
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Groceries",
                            Total = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Farmers Market",
                            Total = 0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Walmart"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Target"
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 8, 13, 1, 45, 749, DateTimeKind.Local).AddTicks(5575),
                            Email = "ionapelia@gmail.com",
                            Name = "Ion Apelia",
                            Password = "password123",
                            Username = "ionapelia"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 8, 13, 1, 45, 749, DateTimeKind.Local).AddTicks(5611),
                            Email = "janedoe@email.com",
                            Name = "Jane Doe",
                            Password = "password456",
                            Username = "janedoe"
                        });
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Category", b =>
                {
                    b.HasOne("ShoppingCostPlanner.Domain.Entities.Store", "Store")
                        .WithMany("Categories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Item", b =>
                {
                    b.HasOne("ShoppingCostPlanner.Domain.Entities.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCostPlanner.Domain.Entities.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.ItemShoppingList", b =>
                {
                    b.HasOne("ShoppingCostPlanner.Domain.Entities.Item", "Item")
                        .WithMany("ItemShoppingLists")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCostPlanner.Domain.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ItemShoppingLists")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.ShoppingList", b =>
                {
                    b.HasOne("ShoppingCostPlanner.Domain.Entities.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Item", b =>
                {
                    b.Navigation("ItemShoppingLists");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.ShoppingList", b =>
                {
                    b.Navigation("ItemShoppingLists");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.Store", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShoppingCostPlanner.Domain.Entities.User", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
